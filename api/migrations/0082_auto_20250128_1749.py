# Generated by Django 5.1.4 on 2025-01-28 23:49

from django.db import migrations

def forward_migration(apps, schema_editor):
    AnnouncementComment = apps.get_model('api', 'AnnouncementComment')
    Comment = apps.get_model('api', "Comment")

    for announcement_comment in AnnouncementComment.objects.all():

        try:
            new_comment = Comment.objects.get(pk=announcement_comment.id)
        except Comment.DoesNotExist:
            announcement = announcement_comment.announcement

            if announcement:
                if announcement_comment.parent_comment:
                    try:
                        parent_comment = Comment.objects.get(pk=announcement_comment.parent_comment.id)
                    except Comment.DoesNotExist:
                        parent_comment = Comment.objects.create(
                            id=announcement_comment.parent_comment.id,
                            text=announcement_comment.parent_comment.text,
                            user=announcement_comment.parent_comment.user,
                            edited=announcement_comment.parent_comment.edited,
                            date_created=announcement_comment.parent_comment.date_created,
                            parent_comment=None,
                        )
                        parent_comment.notfications.set(announcement_comment.parent_comment.notifications.all())

                    new_comment = Comment.objects.create(
                        id=announcement_comment.id,
                        text = announcement_comment.text,
                        user = announcement_comment.user,
                        edited = announcement_comment.edited,
                        parent_comment = parent_comment,
                        date_created = announcement_comment.date_created,
                    )
                else:
                    new_comment = Comment.objects.create(
                        id=announcement_comment.id,
                        text = announcement_comment.text,
                        user = announcement_comment.user,
                        edited = announcement_comment.edited,
                        date_created = announcement_comment.date_created,
                        parent_comment = None,
                    )
                new_comment.notifications.set(announcement_comment.notifications.all())
                announcement.new_comments.add(new_comment)
                announcement.save()

    #delete afterwards because some announcement comments reference another one (parent comment)
    for announcement_comment in AnnouncementComment.objects.all():
        announcement_comment.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0081_comment_announcement_new_comments_race_comments_and_more'),
    ]

    operations = [
        migrations.RunPython(forward_migration)
    ]
