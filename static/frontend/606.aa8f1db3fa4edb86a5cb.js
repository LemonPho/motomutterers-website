"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[606],{606:(t,e,s)=>{s.d(e,{Cx:()=>c,DK:()=>x,Et:()=>$,Hs:()=>X,IR:()=>d,Ir:()=>J,KE:()=>F,KZ:()=>_,Lv:()=>p,Q8:()=>S,Qz:()=>E,Sb:()=>T,Se:()=>j,TR:()=>U,To:()=>O,U1:()=>u,UH:()=>N,US:()=>g,Uu:()=>i,Xc:()=>m,ZR:()=>P,_O:()=>q,bt:()=>k,d1:()=>C,jl:()=>V,ou:()=>L,pg:()=>R,qZ:()=>v,qm:()=>a,rI:()=>b,rO:()=>o,rw:()=>w,sD:()=>l,sZ:()=>h,wS:()=>f,yN:()=>I,zY:()=>y});var n=s(974),r=s(266);async function a(t,e,s,r){let a={error:!1,usernameUnique:null,usernameValid:null,emailUnique:null,emailValid:null,passwordsMatch:null,passwordValid:null,status:null};try{const o=(0,n.Ri)("csrftoken"),i=await fetch("/api/register/",{method:"POST",headers:{"X-CSRFToken":o,"Content-Type":"application/json"},mode:"same-origin",body:JSON.stringify({username:t,email:e,password1:s,password2:r})}),c=(200===i.status||400===i.status)&&await i.json();c&&(a.usernameUnique=c.username_unique,a.usernameValid=c.username_valid,a.emailUnique=c.email_unique,a.emailValid=c.email_valid,a.passwordsMatch=c.passwords_match,a.passwordValid=c.password_valid),a.status=i.status}catch(t){a.error=t}return a}async function o(){let t={error:!1,status:null};try{const e=await fetch("/api/logout/");t.error=500===e.status&&e,t.status=e.status}catch(e){t.error=e}return t}async function i(t,e,s){let r={error:!1,status:null};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/login/",{method:"POST",headers:{"X-CSRFToken":a,"Content-Type":"application/json"},mode:"same-origin",body:JSON.stringify({is_username:t,login_key:e,password:s})});r.error=500===o.status&&o,r.status=o.status}catch(t){r.error=t}return r}async function c(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/request-activation-token/",{method:"POST",headers:{"X-CSRFToken":s,"Content-Type":"application/json"},mode:"same-origin",body:JSON.stringify({uid:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function u(t,e){let s={error:!1,status:null};try{const n=await fetch(`/api/activate?uid=${t}&token=${e}`);500===n.status&&(s.error=n),s.status=n.status}catch(t){s.error=t}return s}async function d(t,e,s,r){const a={error:!1,passwordsMatch:null,passwordValid:null,tokenValid:null,status:null};try{const o=(0,n.Ri)("csrftoken"),i=await fetch("/api/reset-password/",{method:"POST",headers:{"X-CSRFToken":o,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({password1:t,password2:e,uid64:s,token:r})});let c=!1;200!==i.status&&400!==i.status||(c=await i.json()),c&&(a.passwordsMatch=c.passwords_match,a.passwordValid=c.password_valid,a.tokenValid=c.token_valid),a.status=i.status}catch(t){a.error=t}return a}async function l(t,e,s){let r={error:!1,currentPasswordCorrect:null,newPasswordValid:null,status:null};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/change-password/",{method:"POST",headers:{"X-CSRFToken":a,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({token:t,currentPassword:e,newPassword:s})});r.error=500===o.status&&o,r.status=o.status;const i=await o.json();r.currentPasswordCorrect=i.current_password_correct,r.newPasswordValid=i.new_password_valid}catch(t){r.error=t}return r}async function p(t,e){let s={error:!1,currentPasswordCorrect:null,newUsernameValid:null,newUsernameUnique:null,userCanChangeUsername:null,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/change-username/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({currentPassword:t,newUsername:e})});s.status=a.status,s.error=500===a.status&&a;const o=await a.json();s.currentPasswordCorrect=o.current_password_correct,s.newUsernameValid=o.new_username_valid,s.newUsernameUnique=o.new_username_unique,s.userCanChangeUsername=o.user_can_change_username}catch(t){s.error=t}return s}async function m(t,e){let s={error:!1,currentPasswordCorrect:null,newEmailValid:null,newEmailUnique:null,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/change-email/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({currentPassword:t,newEmail:e})});s.status=a.status,s.error=500===a.status&&a;const o=await a.json();s.currentPasswordCorrect=o.current_password_correct,s.newEmailValid=o.new_email_valid,s.newEmailUnique=o.new_email_unique}catch(t){s.error=t}return s}async function y(t,e,s){let n={error:!1,emailActivated:!1};try{const r=await fetch(`/api/activate-email?uid=${t}&token=${e}&email=${s}`);n.emailActivated=r.ok,n.error=500===r.status&&r}catch(t){n.error=t}return n}async function h(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),a=await r.A.post("/api/change-profile-picture/",t,{headers:{"X-CSRFToken":s}});e.status=a.status}catch(t){console.log(t),e.error=t}return e}async function f(t,e){let s={error:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/post-announcement/",{method:"POST",mode:"same-origin",headers:{"Content-type":"application/json","X-CSRFToken":r},body:JSON.stringify({title:t,text:e})});s.status=a.status,s.error=500===a.status&&a}catch(t){s.error=t}return s}async function S(t,e,s){let r={error:!1,status:null};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/edit-announcement/",{method:"POST",headers:{"Content-tyep":"application/json","X-CSRFToken":a},body:JSON.stringify({announcementId:s,text:e,title:t}),mode:"same-origin"});r.error=500===o.status&&o,r.status=o.status}catch(t){r.error=t}return r}async function k(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/delete-announcement/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},body:JSON.stringify({announcementId:t}),mode:"same-origin"});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function w(t,e){let s={error:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/post-announcement-comment/",{method:"POST",headers:{"Content-type":"application/json","X-CSRFToken":r},body:JSON.stringify({announcementId:e,text:t}),mode:"same-origin"});s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function C(t,e){let s={error:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/edit-announcement-comment/",{method:"POST",headers:{"Content-type":"application/json","X-CSRFToken":r},body:JSON.stringify({text:t,commentId:e})});console.log(a),s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function g(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/delete-announcement-comment/",{method:"POST",headers:{"Content-type":"application/json","X-CSRFToken":s},body:JSON.stringify({commentId:t}),mode:"same-origin"});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function R(t,e,s){let r={error:!1,status:null};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/post-announcement-comment-reply/",{method:"POST",headers:{"Content-type":"application/json","X-CSRFToken":a},body:JSON.stringify({commentId:e,announcementId:s,text:t}),mode:"same-origin"});r.error=500===o.status&&o,r.status=o.status}catch(t){r.error=t}return r}async function T(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/read-notification/",{method:"POST",headers:{"Content-type":"application/json","X-CSRFToken":s},body:JSON.stringify({notification_id:t,read:!0}),mode:"same-origin"});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function _(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch(`/api/send-reset-email?username=${t}`,{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({username:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function O(t){let e={error:!1,riderExists:!1,seasonNotFound:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/create-competitor/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({competitor_position:t})}),a=await r.json();e.error=500===r.status&&r,e.riderExists=a.rider_exists,e.seasonNotFound=a.season_not_found,e.status=r.status}catch(t){e.error=t}return e}async function P(t,e){let s={error:!1,invalidLink:!1,invalidSeason:!1,timeout:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/create-season-competitors-link/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({url:t,year:e})}),o=await a.json();s.invalidLink=o.invalidLink,s.invalidSeason=o.invalidSeason,s.timeout=o.timeout,s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function v(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/edit-season-competitor/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({competitor_points:t.competitorPoints,id:t.id,independent:t.independent,rookie:t.rookie})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function j(t,e){let s={error:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/delete-competitor/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({competitor_id:t,season_id:e})});s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function N(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/delete-all-competitors/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({season_id:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function F(t,e,s){let r={error:!1,status:null};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/create-season/",{method:"POST",headers:{"X-CSRFToken":a,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({year:t,top_independent:e,top_rookie:s})});r.error=500===o.status&&o,r.status=o.status}catch(t){r.error=t}return r}async function b(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/set-current-season/",{method:"PUT",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({year:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function X(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/delete-season/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({seasonId:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function J(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/create-race/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({seasonYear:t.seasonYear,track:t.track,timestamp:t.timestamp,is_sprint:t.isSprint})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function U(t,e,s){let r={error:!1,competitorNumbersNotFound:[],invalidLink:!1,timeout:!1,invalidSeason:!1,status:null};try{let a=(0,n.Ri)("csrftoken"),o=await fetch("/api/create-race-link/",{method:"POST",headers:{"X-CSRFToken":a,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({link:t,timestamp:e,season_year:s})});const i=await o.json();r.competitorNumbersNotFound=i.competitors_not_found,r.invalidLink=i.invalidLink,r.invalidSeason=i.invalidSeason,r.timeout=i.timeout,r.error=500===o.status&&o,r.status=o.status}catch(t){r.error=t}return r}async function I(t){let e={error:!1,status:null};try{let s=(0,n.Ri)("csrftoken"),r=await fetch("/api/add-race-results/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({raceId:t.id,competitors_positions:t.competitorsPositions.map((t=>({competitorId:parseInt(t.competitorId),position:parseInt(t.position)}))),finalized:t.finalized})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function V(t,e){let s={error:!1,status:null,competitorsNotFound:[],invalidCompetitorsPositionsSpacing:[],invalidCompetitorsPositions:!1,invalidSeason:!1,invalidRaceData:!1};try{let r=(0,n.Ri)("csrftoken"),a=await fetch("/api/create-complete-race/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({race:t.race,competitors_positions:t.competitors_positions,season_year:e})}),o=await a.json();s.competitorsNotFound=o.competitors_not_found,s.invalidCompetitorsPositionsSpacing=o.invalid_competitors_positions_spacing,s.invalidCompetitorsPositions=o.invalid_competitors_positions,s.invalidSeason=o.invalid_season,s.invalidRaceData=o.invalid_race_data,s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function q(t){let e={error:!1,status:null};try{let s=(0,n.Ri)("csrftoken"),r=await fetch("/api/edit-race/",{method:"POST",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({raceId:t.id,seasonYear:t.seasonYear,track:t.track,title:t.title,timestamp:t.timestamp,is_sprint:t.isSprint})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function x(t,e){let s={error:!1,status:null};try{const r=(0,n.Ri)("csrftoken"),a=await fetch("/api/delete-race/",{method:"POST",headers:{"X-CSRFToken":r,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({raceId:t,year:e})});s.error=500===a.status&&a,s.status=a.status}catch(t){s.error=t}return s}async function E(){let t={error:!1,status:null};try{const e=(0,n.Ri)("csrftoken"),s=await fetch("/api/toggle-users-picks/",{method:"PUT",headers:{"X-CSRFToken":e,"Content-type":"application/json"},mode:"same-origin"});t.error=500===s.status&&s,t.status=s.status}catch(e){t.error=e}return t}async function L(t){let e={error:!1,status:null};try{const s=(0,n.Ri)("csrftoken"),r=await fetch("/api/finalize-season/",{method:"PUT",headers:{"X-CSRFToken":s,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({year:t})});e.error=500===r.status&&r,e.status=r.status}catch(t){e.error=t}return e}async function $(t,e,s){let r={error:!1,status:null,picksAlreadySelected:!1,invalidPicks:!1,invalidIndependent:!1,invalidRookie:!1};try{const a=(0,n.Ri)("csrftoken"),o=await fetch("/api/set-user-picks/",{method:"POST",headers:{"X-CSRFToken":a,"Content-type":"application/json"},mode:"same-origin",body:JSON.stringify({picks_ids:t,independent_pick_id:e,rookie_pick_id:s})}),i=400===o.status&&await o.json();r.error=500===o.status&&o,r.picksAlreadySelected=400===o.status&&i.picks_already_selected,r.invalidPicks=400===o.status&&i.invalid_picks,r.invalidIndependent=400===o.status&&i.invalid_independent,r.invalidRookie=400===o.status&&i.invalid_rookie,r.status=o.status}catch(t){r.error=t}return r}}}]);