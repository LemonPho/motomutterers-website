"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[628],{628:(e,s,t)=>{t.r(s),t.d(s,{default:()=>c,useStandingsContext:()=>u});var a=t(540),n=t(767),r=t(974),o=t(946);const i=(0,a.createContext)();function c(){const{setErrorMessage:e}=(0,o.Xn)(),[s,t]=(0,a.useState)({}),[c,u]=(0,a.useState)(!0),[d,l]=(0,a.useState)({}),[g,h]=(0,a.useState)(!0),[S,v]=(0,a.useState)([]),[w,f]=(0,a.useState)(!0),[k,L]=(0,a.useState)({}),[P,p]=(0,a.useState)(!0);return a.createElement(i.Provider,{value:{retrieveStandings:async function(){u(!0);const s=new URLSearchParams(location.search).get("season"),a=await(0,r.bO)(s);if(a.error)return console.log(a.error),void e("There was an error retrieving the standings");200===a.status&&(t(a.standings),u(!1))},retrieveSelectedSeason:async function(){p(!0);const s=new URLSearchParams(location.search).get("season"),t=await(0,r.cv)(s);t.error?e("There was an error retrieving season data"):200==t.status?(L(t.season),p(!1)):e("Be sure to select a valid season")},retrieveSeasonList:async function(){f(!0);const s=await(0,r.a)();s.error||200!=s.status?e("There was an error retrieving the season list"):(v(s.seasons),f(!1))},retrieveUserPicks:async function(s){h(!0);const t=await(0,r.i)(k.id,s);t.error?e("There was an error retrieving the user picks"):404!=t.status?200==t.status?(l(t.userPicks),h(!1)):e("There was an error loading the user picks"):e("The user picks was not found")},standings:s,userPicksDetailed:d,seasonList:S,selectedSeason:k,standingsLoading:c,userPicksDetailedLoading:g,seasonListLoading:w,selectedSeasonLoading:P}},a.createElement(n.sv,null))}function u(){return(0,a.useContext)(i)}}}]);