"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[192,446,883],{883:(e,r,t)=>{t.r(r),t.d(r,{default:()=>o});var a=t(540),n=t(946);function o(){const{user:e,retrieveUserData:r,setLogout:t,setErrorMessage:o,currentSeason:s,selectPicksState:c,contextLoading:l}=(0,n.Xn)();if(!l)return a.createElement("div",{style:{width:"100%"}},a.createElement("div",{className:"row"},s.year&&a.createElement("a",{className:"col card rounded-15 clickable link-no-decorations me-1 element-background-color element-border-color",href:`/raceresults?season=${s.year}`},a.createElement("div",{className:"card-body"},a.createElement("h1",null,"Race Results"))),a.createElement("a",{className:"col card rounded-15 clickable link-no-decorations ms-1 element-background-color element-border-color",href:"/announcements?page=1"},a.createElement("div",{className:"card-body"},a.createElement("h1",null,"Announcements")))),a.createElement("div",{className:"row my-2"},s.year&&a.createElement("a",{className:"col card rounded-15 clickable link-no-decorations element-background-color element-border-color",href:`/standings?season=${s.year}`},a.createElement("div",{className:"card-body"},a.createElement("h1",null,"Standings")))),e.is_logged_in&&c&&a.createElement("div",{className:"row my-2"},a.createElement("a",{className:"col card rounded-15 clickable link-no-decorations element-background-color element-border-color",href:"/select-picks"},a.createElement("div",{className:"card-body"},a.createElement("h1",null,"Select your picks!")))))}t(446)},192:(e,r,t)=>{t.r(r),t.d(r,{default:()=>l,useSeasonCreateContext:()=>i});var a=t(540),n=t(767),o=t(974),s=t(946);const c=(0,a.createContext)();function l(){const{setErrorMessage:e}=(0,s.Xn)(),[r,t]=(0,a.useState)(!1),[l,i]=(0,a.useState)([]);return a.createElement(c.Provider,{value:{seasons:l,seasonsLoading:r,retrieveSeasons:async function(){let r=await(0,o.a)();if(r.error)return console.log(r.error),void e("There was an error loading the seasons");i(r.seasons),t(!1)}}},a.createElement(n.sv,null))}function i(){return(0,a.useContext)(c)}},446:(e,r,t)=>{t.r(r),t.d(r,{default:()=>i,useSeasonContext:()=>d});var a=t(540),n=t(974),o=t(767),s=t(398),c=t(946);t(192);const l=(0,a.createContext)();function i(){const{setErrorMessage:e,setSuccessMessage:r,setLoadingMessage:t,resetApplicationMessages:i}=(0,c.Xn)(),d=(0,o.g)().seasonYear,[u,m]=(0,a.useState)(null),[h,g]=(0,a.useState)(!1);async function f(){const r=await(0,n.oK)(d);let t={};return 404===r.status?(m(!1),g(!1),void e("Season not found")):r.error||200!=r.status?(e("There was an error loading the season"),g(!1),void console.log(r.error)):(t=r.season,t.competitorsSortedNumber=r.competitorsSortedNumber,m(t),void g(!1))}return a.createElement(l.Provider,{value:{season:u,seasonLoading:h,retrieveSeason:f,deleteSeason:async function(){const t=await(0,s.Hs)(u.id);200!=t.status||t.error?e("There was an error deleting the season"):(r("Season deleted"),m(null))},createSeasonRace:async function(t){i();const a=await(0,s.Ir)(t);return a.error||200!=a.status?(e("There was an error creating the race"),console.log(a.error),!1):(r("Race created"),f(),!0)},addSeasonRaceResults:async function(t){i();const a=await(0,s.yN)(t);return a.error?(e("There was an error adding the results"),console.log(a.error),!1):200!=a.status?(e("Be sure that the information inputted is correct"),!1):(r("Race result saved"),f(),!0)},editSeasonRace:async function(t){i();let a=await(0,s._O)(t);return a.error?(e("There was an error editing the race"),console.log(a.error),!1):200!=a.status?(e("Be sure the information is valid"),!1):(r("Changes saved"),f(),!0)},deleteSeasonRace:async function(a){i(),t("Loading...");let n=await(0,s.DK)(a,d);if(n.error||200!=n.status)return console.log(n.error),e("There was an error deleting the race"),void e("There was an error deleting the race");t(!1),r("Race deleted"),f()},createSeasonCompetitor:async function(t){i();const a=await(0,s.To)(t);return a.error?(e("There was an error submiting the competitor"),console.log(a.error),!1):a.riderExists?(e("A rider with that number already exists"),!1):a.seasonNotFound?(e("The season was not found of which you want to add the competitor"),!1):201!=a.status?(e("Make sure the information is correct and valid"),!1):(r("Rider created"),f(),!0)},editSeasonCompetitor:async function(t){i();const a=await(0,s.qZ)(t);return a.error?(console.log(a.error),e("There was an error editing the rider"),!1):200!=a.status?(e("Make sure the information is valid"),!1):(r("Changes saved"),f(),!0)},deleteSeasonCompetitor:async function(t,a){i();const n=await(0,s.Se)(t,a);return n.error||200!=n.status?(e("There was an error deleting the rider"),console.log(n.error),!1):(r("Rider deleted"),f(),!0)}}},a.createElement(o.sv,null))}function d(){return(0,a.useContext)(l)}}}]);