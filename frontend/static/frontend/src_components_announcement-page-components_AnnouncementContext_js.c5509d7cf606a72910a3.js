/*! For license information please see src_components_announcement-page-components_AnnouncementContext_js.c5509d7cf606a72910a3.js.LICENSE.txt */
"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["src_components_announcement-page-components_AnnouncementContext_js"],{"./src/components/announcement-page-components/AnnouncementContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ AnnouncementContextProvider),\n/* harmony export */   useAnnouncementContext: () => (/* binding */ useAnnouncementContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ApplicationContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ApplicationContext */ "./src/components/ApplicationContext.js");\n/* harmony import */ var _fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fetch-utils/fetchGet */ "./src/components/fetch-utils/fetchGet.js");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/dist/index.js");\n/* harmony import */ var _fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fetch-utils/fetchPost */ "./src/components/fetch-utils/fetchPost.js");\n\n\n\n\n\n\nconst AnnouncementContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nfunction AnnouncementContextProvider() {\n  const {\n    setErrorMessage,\n    setSuccessMessage,\n    setModalErrorMessage,\n    resetApplicationMessages\n  } = (0,_ApplicationContext__WEBPACK_IMPORTED_MODULE_1__.useApplicationContext)();\n  const {\n    announcementId\n  } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useParams)();\n  const [announcement, setAnnouncement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [announcementLoading, setAnnouncementLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n\n  //--------------------------------ANNOUNCEMENTS-------------------------------------------//\n  async function retrieveAnnouncement() {\n    setAnnouncementLoading(true);\n    if (announcementId === null) {\n      setAnnouncement(false);\n      return;\n    }\n    const announcementResponse = await (0,_fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_2__.getAnnouncement)(announcementId);\n    console.log(announcementResponse);\n    if (announcementResponse.status == 404) {\n      setAnnouncement(false);\n      setAnnouncementLoading(false);\n      return;\n    }\n    if (announcementResponse.error || announcementResponse.status != 200) {\n      console.log(announcementResponse.error);\n      setErrorMessage("There was an error loading the announcement");\n      setAnnouncementLoading(false);\n      return;\n    }\n    setAnnouncement(announcementResponse.announcement);\n    setComments(announcementResponse.comments);\n    setAnnouncementLoading(false);\n  }\n  ;\n  async function editAnnouncement(title, text, announcementId) {\n    const announcementResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitEditAnnouncement)(title, text, announcementId);\n    if (announcementResponse.error) {\n      console.log(announcementResponse.error);\n      setErrorMessage("There was an error saving the changes");\n      return;\n    }\n    if (announcementResponse.status === 400) {\n      setErrorMessage("Be sure the title has a limit of 128 characters and the text 2048");\n      return;\n    }\n    if (announcementResponse.status === 200) {\n      setSuccessMessage("Announcement changes saved");\n      return;\n    }\n    setErrorMessage("There was an error saving the changes");\n    return;\n  }\n  async function deleteAnnouncement(announcementId) {\n    const announcementResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitDeleteAnnouncement)(announcementId);\n    if (announcementResponse.error || announcementResponse.status != 200) {\n      console.log(announcementResponse.error);\n      setErrorMessage("There was an error deleting the announcement");\n      return;\n    }\n    setSuccessMessage("Announcement successfully deleted");\n    return;\n  }\n\n  //---------------------------------COMMENTS-----------------------------------------------//\n\n  async function retrieveComment(commentId) {\n    resetAnnouncementsMessages();\n    const commentResponse = await (0,_fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_2__.getAnnouncementComment)(commentId);\n    if (commentResponse.error || commentResponse.status != 200) {\n      setErrorMessage("There was an error retrieving the comment");\n      console.log(commentResponse.error);\n      return false;\n    }\n    return commentResponse.comment.text;\n  }\n  async function createComment(text) {\n    resetApplicationMessages();\n    const commentResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitAnnouncementComment)(text, announcement.id);\n    if (commentResponse.error) {\n      setErrorMessage("There was an error posting the comment");\n      console.log(commentResponse.error);\n      return false;\n    }\n    if (commentResponse.status != 200) {\n      setErrorMessage("Comment is invalid");\n      return false;\n    }\n\n    //reload comments to load the comment after its sent (NEEDS CHANGING)\n    retrieveAnnouncement();\n    return true;\n  }\n  async function editComment(text, commentId) {\n    resetAnnouncementsMessages();\n    const commentResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitEditAnnouncementComment)(text, commentId);\n    if (commentResponse.error) {\n      setErrorMessage("There was an error editing the comment");\n      console.log(commentResponse.error);\n      return false;\n    }\n    if (commentResponse.status != 200) {\n      setErrorMessage("Comments have a max character count of 2048 characters");\n      return false;\n    }\n    return true;\n  }\n  async function deleteComment(commentId) {\n    resetAnnouncementsMessages();\n    const commentResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitDeleteAnnouncementComment)(commentId);\n    if (commentResponse.error || commentResponse.status != 200) {\n      setErrorMessage("There was an error deleting the comment");\n      console.log(commentResponse.error);\n      return;\n    }\n    retrieveAnnouncement();\n    return;\n  }\n  async function createCommentReply(text, commentId) {\n    resetAnnouncementsMessages();\n    const replyResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_3__.submitAnnouncementCommentReply)(text, commentId, announcement.id);\n    if (replyResponse.error || replyResponse.status != 200) {\n      setErrorMessage("Error submiting the comment");\n      console.log(replyResponse.error);\n      return false;\n    }\n\n    //TODO: make a system where it only retrieves the singular comment to then update it, not eficient to update the whole announcement\n    retrieveAnnouncement();\n    return true;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AnnouncementContext.Provider, {\n    value: {\n      announcement,\n      comments,\n      retrieveAnnouncement,\n      editAnnouncement,\n      deleteAnnouncement,\n      announcementLoading,\n      retrieveComment,\n      editComment,\n      deleteComment,\n      createCommentReply,\n      createComment\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Outlet, null));\n}\nfunction useAnnouncementContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AnnouncementContext);\n}\n\n//# sourceURL=webpack://frontend/./src/components/announcement-page-components/AnnouncementContext.js?')}}]);