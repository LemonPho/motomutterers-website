/*! For license information please see src_components_admin-page-components_season-edit-components_SeasonContext_js.1968dba1d5fe4fb53d15.js.LICENSE.txt */
"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["src_components_admin-page-components_season-edit-components_SeasonContext_js"],{"./src/components/admin-page-components/SeasonCreateContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ SeasonCreateContextProvider),\n/* harmony export */   useSeasonCreateContext: () => (/* binding */ useSeasonCreateContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/dist/index.js");\n/* harmony import */ var _fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fetch-utils/fetchGet */ "./src/components/fetch-utils/fetchGet.js");\n/* harmony import */ var _ApplicationContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ApplicationContext */ "./src/components/ApplicationContext.js");\n\n\n\n\nconst SeasonCreateContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nfunction SeasonCreateContextProvider() {\n  const {\n    setErrorMessage\n  } = (0,_ApplicationContext__WEBPACK_IMPORTED_MODULE_2__.useApplicationContext)();\n  const [seasonsLoading, setSeasonsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [seasons, setSeasons] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  async function retrieveSeasons() {\n    let seasonsResponse = await (0,_fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_1__.getSeasonsSimpleYear)();\n    if (seasonsResponse.error) {\n      console.log(seasonsResponse.error);\n      setErrorMessage("There was an error loading the seasons");\n      return;\n    }\n    setSeasons(seasonsResponse.seasons);\n    setSeasonsLoading(false);\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SeasonCreateContext.Provider, {\n    value: {\n      seasons,\n      seasonsLoading,\n      retrieveSeasons\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Outlet, null));\n}\nfunction useSeasonCreateContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SeasonCreateContext);\n}\n\n//# sourceURL=webpack://frontend/./src/components/admin-page-components/SeasonCreateContext.js?')},"./src/components/admin-page-components/season-edit-components/SeasonContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ SeasonContextProvider),\n/* harmony export */   useSeasonContext: () => (/* binding */ useSeasonContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fetch-utils/fetchGet */ "./src/components/fetch-utils/fetchGet.js");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/dist/index.js");\n/* harmony import */ var _fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fetch-utils/fetchPost */ "./src/components/fetch-utils/fetchPost.js");\n/* harmony import */ var _ApplicationContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ApplicationContext */ "./src/components/ApplicationContext.js");\n/* harmony import */ var _SeasonCreateContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SeasonCreateContext */ "./src/components/admin-page-components/SeasonCreateContext.js");\n\n\n\n\n\n\nconst SeasonContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nfunction SeasonContextProvider() {\n  const {\n    setErrorMessage,\n    setSuccessMessage,\n    setLoadingMessage,\n    resetApplicationMessages\n  } = (0,_ApplicationContext__WEBPACK_IMPORTED_MODULE_3__.useApplicationContext)();\n  const seasonYear = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_5__.useParams)().seasonYear;\n  const [season, setSeason] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [seasonLoading, setSeasonLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  async function retrieveSeason() {\n    const seasonResponse = await (0,_fetch_utils_fetchGet__WEBPACK_IMPORTED_MODULE_1__.getSeason)(seasonYear);\n    let tempSeason = {};\n    if (seasonResponse.status === 404) {\n      setSeason(false);\n      setSeasonLoading(false);\n      setErrorMessage("Season not found");\n      return;\n    }\n    if (seasonResponse.error || seasonResponse.status != 200) {\n      setErrorMessage("There was an error loading the season");\n      setSeasonLoading(false);\n      console.log(seasonResponse.error);\n      return;\n    }\n    tempSeason = seasonResponse.season;\n    tempSeason.competitorsSortedNumber = seasonResponse.competitorsSortedNumber;\n    setSeason(tempSeason);\n    setSeasonLoading(false);\n  }\n  async function deleteSeason() {\n    const seasonResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitDeleteSeason)(season.id);\n    if (seasonResponse.status != 200 || seasonResponse.error) {\n      setErrorMessage("There was an error deleting the season");\n      return;\n    }\n    setSuccessMessage("Season deleted");\n    setSeason(null);\n  }\n\n  //-------------------------------------RACES--------------------------------------------//\n\n  async function createSeasonRace(newRace) {\n    resetApplicationMessages();\n    const raceResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitRace)(newRace);\n    if (raceResponse.error || raceResponse.status != 200) {\n      setErrorMessage("There was an error creating the race");\n      console.log(raceResponse.error);\n      return false;\n    }\n    setSuccessMessage("Race created");\n    retrieveSeason();\n    return true;\n  }\n  async function addSeasonRaceResults(newRace) {\n    resetApplicationMessages();\n    const raceResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitRaceResults)(newRace);\n    if (raceResponse.error) {\n      setErrorMessage("There was an error adding the results");\n      console.log(raceResponse.error);\n      return false;\n    }\n    if (raceResponse.status != 200) {\n      setErrorMessage("Be sure that the information inputted is correct");\n      return false;\n    }\n    setSuccessMessage("Race result saved");\n    retrieveSeason();\n    return true;\n  }\n  async function editSeasonRace(newRace) {\n    resetApplicationMessages();\n    let raceResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitEditRace)(newRace);\n    if (raceResponse.error) {\n      setErrorMessage("There was an error editing the race");\n      console.log(raceResponse.error);\n      return false;\n    }\n    if (raceResponse.status != 200) {\n      setErrorMessage("Be sure the information is valid");\n      return false;\n    }\n    setSuccessMessage("Changes saved");\n    retrieveSeason();\n    return true;\n  }\n  async function deleteSeasonRace(raceId) {\n    resetApplicationMessages();\n    setLoadingMessage("Loading...");\n    let raceResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitDeleteRace)(raceId, seasonYear);\n    if (raceResponse.error || raceResponse.status != 200) {\n      console.log(raceResponse.error);\n      setErrorMessage("There was an error deleting the race");\n      setErrorMessage("There was an error deleting the race");\n      return;\n    }\n    setLoadingMessage(false);\n    setSuccessMessage("Race deleted");\n    retrieveSeason();\n    return;\n  }\n\n  //---------------------------------COMPETITORS-----------------------------------------//\n\n  async function createSeasonCompetitor(newCompetitorPosition) {\n    resetApplicationMessages();\n    const competitorResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitCompetitor)(newCompetitorPosition);\n    if (competitorResponse.error) {\n      setErrorMessage("There was an error submiting the competitor");\n      console.log(competitorResponse.error);\n      return false;\n    }\n    if (competitorResponse.riderExists) {\n      setErrorMessage("A rider with that number already exists");\n      return false;\n    }\n    if (competitorResponse.seasonNotFound) {\n      setErrorMessage("The season was not found of which you want to add the competitor");\n      return false;\n    }\n    if (competitorResponse.status != 201) {\n      setErrorMessage("Make sure the information is correct and valid");\n      return false;\n    }\n    setSuccessMessage("Rider created");\n    retrieveSeason();\n    return true;\n  }\n  async function editSeasonCompetitor(newCompetitor) {\n    resetApplicationMessages();\n    const competitorResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitEditSeasonCompetitor)(newCompetitor);\n    if (competitorResponse.error) {\n      console.log(competitorResponse.error);\n      setErrorMessage("There was an error editing the rider");\n      return false;\n    }\n    if (competitorResponse.status != 200) {\n      setErrorMessage("Make sure the information is valid");\n      return false;\n    }\n    setSuccessMessage("Changes saved");\n    retrieveSeason();\n    return true;\n  }\n  async function deleteSeasonCompetitor(competitorId, seasonId) {\n    resetApplicationMessages();\n    const competitorResponse = await (0,_fetch_utils_fetchPost__WEBPACK_IMPORTED_MODULE_2__.submitDeleteCompetitor)(competitorId, seasonId);\n    if (competitorResponse.error) {\n      setErrorMessage("There was an error deleting the rider");\n      console.log(competitorResponse.error);\n      return false;\n    }\n    if (competitorResponse.status == 422) {\n      setErrorMessage("The competitor is being used in picks or a race, please edit instead of deleting");\n      return false;\n    }\n    if (competitorResponse.status != 200) {\n      setErrorMessage("There was an error deleting the competitor");\n      return false;\n    }\n    setSuccessMessage("Rider deleted");\n    retrieveSeason();\n    return true;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SeasonContext.Provider, {\n    value: {\n      season,\n      seasonLoading,\n      retrieveSeason,\n      deleteSeason,\n      createSeasonRace,\n      addSeasonRaceResults,\n      editSeasonRace,\n      deleteSeasonRace,\n      createSeasonCompetitor,\n      editSeasonCompetitor,\n      deleteSeasonCompetitor\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Outlet, null));\n}\nfunction useSeasonContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SeasonContext);\n}\n\n//# sourceURL=webpack://frontend/./src/components/admin-page-components/season-edit-components/SeasonContext.js?')}}]);